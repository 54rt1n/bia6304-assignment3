[tool.poetry]
name = "bia6304-assignment3"
version = "0.1.0"
description = "Document indexing and search system using vector embeddings"
authors = ["Martin Bukowski <martin.bukowski@rockhurst.edu>"]
readme = "README.md"
packages = [{include = "assignment"}]

[tool.poetry.dependencies]
python = "^3.9"
pandas = "2.*"
numpy = ">=1.26.4,<2"
chromadb = ">=0.5.*"
torch = "2.2.*"
transformers = "4.*"
click = "8.*"

[tool.poetry.group.dev.dependencies]
pytest = "8.*"
pytest-mock = "*"
pytest-cov = "*"
pytest-asyncio = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
assignment = "assignment.__main__:cli"

[tool.pytest.ini_options]
addopts = "-v --cov=assignment --cov-report=term-missing -W ignore::DeprecationWarning"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]

[tool.coverage.run]
source = ["assignment"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true